def @main  { 
$entry0:
    mul %t0 #4 #100
    add %t1 %t1 #4
    malloc %t2 %t1
    store %t3 %t1
    mov %t4 %t3
    mov %t5 #0
    mov %t6 #0
    mov %t7 #0
    jmp for_cond0
$for_cond0:
    phi %t8 %t7 
    slt %t9 %t8 #100
    br %t9 for_body0 for_final0
$for_body0:
    mul %t10 %t8 #4
    add %t11 %t10 #4
    add %t12 %t11 %t4
    mul %t13 #4 #100
    add %t14 %t14 #4
    malloc %t15 %t14
    store %t16 %t14
    store %t17 %t16
    jmp for_iter0
$for_iter0:
    mov %t18 %t8
    add %t19 %t19 #1
    jmp for_cond0
$for_final0:
    mov %t20 #0
    mov %t21 #0
    jmp for_cond1
$for_cond1:
    phi %t22 %t6 
    phi %t23 %t21 
    slt %t24 %t23 #100
    br %t24 for_body1 for_final1
$for_final1:
    mov %t25 #0
    jmp for_cond2
$for_cond2:
    phi %t26 %t22 
    phi %t27 %t25 
    slt %t28 %t27 #100
    br %t28 for_body2 for_final2
$for_body2:
    sgt %t29 %t27 #20
    br %t29 lhs_true0 if_final0
$lhs_true0:
    slt %t30 %t27 #80
    br %t30 if_true0 if_final0
$if_true0:
    mov %t31 #0
    jmp for_cond3
$for_cond3:
    phi %t32 %t31 
    slt %t33 %t32 #100
    br %t33 for_body3 for_final3
$for_body3:
    sgt %t34 %t32 #5
    br %t34 if_true1 lhs_false0
$if_true1:
    mul %t35 %t27 #4
    add %t36 %t35 #4
    add %t37 %t36 %t4
    load %t38 %t37
    mul %t39 %t32 #4
    add %t40 %t39 #4
    add %t41 %t40 %t38
    sub %t42 #100 #1
    add %t43 %t42 #1
    sub %t44 %t43 #1
    add %t45 %t44 #1
    add %t46 %t32 %t45
    div %t47 %t46 #2
    store %t48 %t47
    jmp if_final1
$if_final1:
    jmp for_iter1
$for_iter1:
    mov %t49 %t32
    add %t50 %t50 #1
    jmp for_cond3
$lhs_false0:
    slt %t51 %t27 #90
    br %t51 if_true1 if_final1
$for_final3:
    jmp if_final0
$if_final0:
    phi %t52 %t26 %t32 
    jmp for_iter2
$for_iter2:
    mov %t53 %t27
    add %t54 %t54 #1
    jmp for_cond2
$for_final2:
    mov %t55 #0
    jmp for_cond4
$for_cond4:
    phi %t56 %t20 
    phi %t57 %t26 
    phi %t58 %t55 
    slt %t59 %t58 #100
    br %t59 for_body4 for_final4
$for_final4:
    call %t60 toString %t61 
    call null println %t62 
    ret #0
$for_body4:
    mov %t63 #0
    jmp for_cond5
$for_cond5:
    phi %t64 %t56 
    phi %t65 %t63 
    slt %t66 %t65 #100
    br %t66 for_body5 for_final5
$for_body5:
    mul %t67 %t58 #4
    add %t68 %t67 #4
    add %t69 %t68 %t4
    load %t70 %t69
    mul %t71 %t65 #4
    add %t72 %t71 #4
    add %t73 %t72 %t70
    load %t74 %t73
    add %t75 %t64 %t74
    mov %t76 %t75
    jmp for_iter3
$for_iter3:
    mov %t77 %t65
    add %t78 %t78 #1
    jmp for_cond5
$for_final5:
    jmp for_iter4
$for_iter4:
    mov %t79 %t58
    add %t80 %t80 #1
    jmp for_cond4
$for_body1:
    mov %t81 #0
    jmp for_cond6
$for_cond6:
    phi %t82 %t81 
    slt %t83 %t82 #100
    br %t83 for_body6 for_final6
$for_body6:
    mul %t84 %t23 #4
    add %t85 %t84 #4
    add %t86 %t85 %t4
    load %t87 %t86
    mul %t88 %t82 #4
    add %t89 %t88 #4
    add %t90 %t89 %t87
    store %t91 #0
    jmp for_iter5
$for_iter5:
    mov %t92 %t82
    add %t93 %t93 #1
    jmp for_cond6
$for_final6:
    jmp for_iter6
$for_iter6:
    mov %t94 %t23
    add %t95 %t95 #1
    jmp for_cond1
}
def @__bootstrap  { 
$entry1:
    call %t96 main 
    mov %t97 %t96
    ret %t97
}
